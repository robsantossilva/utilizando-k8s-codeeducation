steps:

  # Configurar uma secret contendo a senha do docker hub com o nome (docker-hub-password)
- id: "Secret Manager"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [ '-c', "gcloud secrets versions access latest --secret=docker-hub-password --format='get(payload.data)' | tr '_-' '/+' | base64 -d > decrypted-data.txt" ]

- id: "docker login"
  name: gcr.io/cloud-builders/docker
  entrypoint: 'bash'
  args: [ '-c', 'docker login --username=robsantossilva --password-stdin < decrypted-data.txt']

- id: "Rodando install"
  name: "gcr.io/cloud-builders/go"
  args: ["install", "desafio-go"]
  env: ["GOPATH=./3-desafio-go"]

- id: "Rodando Test"
  name: "gcr.io/cloud-builders/go"
  args: ["test", "desafio-go"]
  env: ["GOPATH=./3-desafio-go"]

- id: "Rodando Build"
  name: "gcr.io/cloud-builders/docker"
  args:
  - 'build'
  - '-t'
  - 'robsantossilva/desafio-go-codeeducation:latest'
  - '-t'
  - 'robsantossilva/desafio-go-codeeducation:$SHORT_SHA'
  - '.'
  - '-f'
  - './3-desafio-go/Dockerfile.prod'

- id: "Rodando Push Latest"
  name: "gcr.io/cloud-builders/docker"
  args: ["push", "robsantossilva/desafio-go-codeeducation:latest"]

- id: "Rodando Push"
  name: "gcr.io/cloud-builders/docker"
  args: ["push", "robsantossilva/desafio-go-codeeducation:$SHORT_SHA"]

- id: "Deploy Kubernetes"
  name: "gcr.io/cloud-builders/gke-deploy"
  args:
  - run
  - --filename=./3-desafio-go/k8s
  - --image=robsantossilva/desafio-go-codeeducation:latest
  - --location=us-central1-c
  - --cluster=my-first-cluster-1

# images:
# - 'robsantossilva/desafio-go-codeeducation:latest'
# - 'robsantossilva/desafio-go-codeeducation:$SHORT_SHA'

